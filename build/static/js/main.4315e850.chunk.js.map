{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filterNumbers","filterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","person","removePerson","name","number","onClick","Persons","persons","personsToShow","length","filter","toLowerCase","includes","map","Notification","message","console","log","className","level","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","messageToShow","setMessageToShow","notification","useEffect","personService","initialPersons","setMessage","props","setTimeout","event","target","preventDefault","find","window","confirm","changedPerson","newMap","p","catch","error","personObject","returnedPerson","concat","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4315e850.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterNumbers, filterChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={filterNumbers} onChange={filterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <>\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n               name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>       \r\n    </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({person, removePerson}) => {\r\n    return (\r\n      <div>\r\n        {person.name}&nbsp;{person.number}\r\n        <button onClick={removePerson}>delete</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nconst Persons = ({persons, filterNumbers, removePerson}) => {\r\n    const personsToShow = filterNumbers.length === 0\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filterNumbers.toLowerCase()))\r\n\r\n\r\n    return (\r\n        <>\r\n            {personsToShow.map(person =>\r\n                <Person key={person.name} person={person} removePerson={() => removePerson(person)}/>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    console.log(message)\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    console.log(message)\r\n     return (\r\n        <div className={message.level}>\r\n        {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://pacific-ridge-80091.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}  \r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst services = {\r\n  getAll, create, remove, update\r\n};\r\n  \r\nexport default services","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filterNumbers, setFilter] = useState('')\n  const [messageToShow, setMessageToShow] = useState(null)\n\n  let notification = null\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n    })\n   }, [])\n\n  console.log('render', persons.length, 'persons')\n\n  const filterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n\n    if (person != null) {\n      const id = person.id\n\n      notification = {\n        level: 'info',\n        message: `The number of '${person.name}' has been replaced`\n      }\n\n      if (window.confirm(`'${person.name}' is already added to phonebook. Replace the old number with the new one?`)) {\n        const changedPerson = { ...person, number: newNumber }\n\n        personService\n          .update(id, changedPerson)\n          .then(response => {\n            const newMap = persons.map(p => p.id !== id ? p : response)\n            setPersons(newMap)\n            setMessage(notification)\n            setNewName('')\n            setNewNumber('')  \n          })\n          .catch(error => {\n            notification = {\n              level: 'error',\n              message: `The person '${person.name}' was already deleted from server`\n            }\n            setPersons(persons.filter(p => p.id !== id))\n            setMessage(notification)\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      notification = {\n        level: 'info',\n        message: `Added ${personObject.name}`\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(notification)\n          setNewName('')\n          setNewNumber('')\n       })\n    }\n  }\n\n  const removePerson = (person) => {\n\n    const id = person.id\n    notification = {\n      level: 'info',\n      message: `'${person.name}' removed`\n    }\n\n    if (window.confirm(`Delete '${person.name}?'`)) {\n      personService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(n => n.id !== id))\n          setMessage(notification)\n        })\n        .catch(error => {\n          notification = {\n            level: 'error',\n            message: `The person '${person.name}' was already deleted from server`\n          }\n         setPersons(persons.filter(n => n.id !== id))\n         setMessage(notification)\n        })\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const setMessage = (props) => {\n    console.log(props)\n    setMessageToShow(props)\n\n    setTimeout(() => {\n      setMessageToShow(null)\n    }, 5000)\n  }\n\n  console.log(filterNumbers)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={messageToShow} />\n        <Filter key=\"filter\" filterNumbers={filterNumbers} filterChange={filterChange} />\n      <h2>add a new</h2>\n        <PersonForm key=\"personForm\" \n          addPerson={addPerson} \n          newName={newName} \n          handleNameChange={handleNameChange} \n          newNumber={newNumber} \n          handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n        <Persons key=\"persons\" persons={persons} filterNumbers={filterNumbers} \n            removePerson={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n document.getElementById('root')\n);\n"],"sourceRoot":""}